{
  "custom-functions.html?swift#sassfunction" : {
    "abstract" : "The Swift type of a Sass function.",
    "name" : "SassFunction"
  },
  "custom-functions.html?swift#sassfunctionmap" : {
    "abstract" : "A set of SassFunctions and their signatures.",
    "name" : "SassFunctionMap"
  },
  "custom-functions.html?swift#sassfunctionsignature" : {
    "abstract" : "A Sass function signature.",
    "name" : "SassFunctionSignature"
  },
  "dartsass\/types\/compiler.html?swift" : {
    "abstract" : "A Sass compiler that uses Dart Sass as an embedded child process.",
    "name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#compilefileurloutputstylesourcemapstyleincludecharsetimportersfunctions" : {
    "abstract" : "Compile to CSS from a stylesheet file.",
    "name" : "compile(fileURL:outputStyle:sourceMapStyle:includeCharset:importers:functions:)",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#compilername" : {
    "abstract" : "The name of the underlying Sass implementation.  nil if unknown.",
    "name" : "compilerName",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#compilerpackageversion" : {
    "abstract" : "The version of the package implementing the compiler side of the embedded Sass protocol.\nProbably in semver format.\nnil if unknown (never got a version).",
    "name" : "compilerPackageVersion",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#compilerprocessidentifier" : {
    "abstract" : "The process ID of the embedded Sass compiler.",
    "name" : "compilerProcessIdentifier",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#compilerversion" : {
    "abstract" : "The version of the underlying Sass implementation.  For Dart Sass and LibSass this is in\nsemver format. nil if unknown (never got a version).",
    "name" : "compilerVersion",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#compilestringsyntaxurlimporteroutputstylesourcemapstyleincludecharsetimportersfunctions" : {
    "abstract" : "Compile to CSS from an inline stylesheet.",
    "name" : "compile(string:syntax:url:importer:outputStyle:sourceMapStyle:includeCharset:importers:functions:)",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#initeventloopgroupproviderembeddedcompilerfileurltimeoutmessagestyleverbosedeprecationssuppressdependencywarningsimportersfunctions" : {
    "abstract" : "Use a program as the Sass embedded compiler.",
    "name" : "init(eventLoopGroupProvider:embeddedCompilerFileURL:timeout:messageStyle:verboseDeprecations:suppressDependencyWarnings:importers:functions:)",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#initeventloopgroupprovidertimeoutmessagestyleverbosedeprecationssuppressdependencywarningsimportersfunctions" : {
    "abstract" : "Use the bundled Dart Sass compiler as the Sass compiler.",
    "name" : "init(eventLoopGroupProvider:timeout:messageStyle:verboseDeprecations:suppressDependencyWarnings:importers:functions:)",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#logger" : {
    "abstract" : "Logger for the module.",
    "name" : "logger",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#reinit" : {
    "abstract" : "Restart the embedded Sass compiler.",
    "name" : "reinit()",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/compiler.html?swift#shutdowngracefully" : {
    "abstract" : "Shut down the compiler.",
    "name" : "shutdownGracefully()",
    "parent_name" : "Compiler"
  },
  "dartsass\/types\/filesystemimporter1.html?swift" : {
    "abstract" : "Methods required to implement a filesystem-redirecting stylesheet importer.",
    "name" : "FilesystemImporter"
  },
  "dartsass\/types\/filesystemimporter1.html?swift#resolveruleurlfromimport" : {
    "abstract" : "Resolve an imported URL to a filesystem location.",
    "name" : "resolve(ruleURL:fromImport:)",
    "parent_name" : "FilesystemImporter"
  },
  "dartsass\/types\/importer4.html?swift" : {
    "abstract" : "Methods required to implement a stylesheet importer.",
    "name" : "Importer"
  },
  "dartsass\/types\/importer4.html?swift#canonicalizeruleurlfromimport" : {
    "abstract" : "Convert an imported URL to its canonical format.",
    "name" : "canonicalize(ruleURL:fromImport:)",
    "parent_name" : "Importer"
  },
  "dartsass\/types\/importer4.html?swift#loadcanonicalurl" : {
    "abstract" : "Load a stylesheet from a canonical URL",
    "name" : "load(canonicalURL:)",
    "parent_name" : "Importer"
  },
  "dartsass\/types\/importerresults.html?swift" : {
    "abstract" : "The results of loading a stylesheet through an importer.",
    "name" : "ImporterResults"
  },
  "dartsass\/types\/importerresults.html?swift#contents" : {
    "abstract" : "The contents of the stylesheet.",
    "name" : "contents",
    "parent_name" : "ImporterResults"
  },
  "dartsass\/types\/importerresults.html?swift#init_syntaxsourcemapurl" : {
    "abstract" : "Initialize a new ImporterResults.",
    "name" : "init(_:syntax:sourceMapURL:)",
    "parent_name" : "ImporterResults"
  },
  "dartsass\/types\/importerresults.html?swift#sourcemapurl" : {
    "abstract" : "URL used to reference the stylesheet from a source map.",
    "name" : "sourceMapURL",
    "parent_name" : "ImporterResults"
  },
  "dartsass\/types\/importerresults.html?swift#syntax1" : {
    "abstract" : "The syntax of the stylesheet.",
    "name" : "syntax",
    "parent_name" : "ImporterResults"
  },
  "dartsass\/types\/importresolver1.html?swift" : {
    "abstract" : "How the Sass compiler should resolve @import, @use, and @forward rules.",
    "name" : "ImportResolver"
  },
  "dartsass\/types\/importresolver1.html?swift#filesystemimporter_" : {
    "abstract" : "Call back through the FilesystemImporter to resolve the rule.",
    "name" : "filesystemImporter(_:)",
    "parent_name" : "ImportResolver"
  },
  "dartsass\/types\/importresolver1.html?swift#importer_" : {
    "abstract" : "Call back through the Importer to resolve the rule.",
    "name" : "importer(_:)",
    "parent_name" : "ImportResolver"
  },
  "dartsass\/types\/importresolver1.html?swift#loadpath_" : {
    "abstract" : "Search a filesystem directory to resolve the rule.  See the Sass docs.",
    "name" : "loadPath(_:)",
    "parent_name" : "ImportResolver"
  },
  "dartsass\/types\/lifecycleerror.html?swift" : {
    "abstract" : "Thrown on detecting a usage error of the Compiler API, for example trying to use it after shutdown.",
    "name" : "LifecycleError"
  },
  "dartsass\/types\/lifecycleerror.html?swift#description25" : {
    "abstract" : "Text explaining the lifecycle error.",
    "name" : "description",
    "parent_name" : "LifecycleError"
  },
  "dartsass\/types\/protocolerror.html?swift" : {
    "abstract" : "Thrown on detecting an error communicating with the Sass embedded compiler: for example a badly\nformed or out-of-sequence message.",
    "name" : "ProtocolError"
  },
  "dartsass\/types\/protocolerror.html?swift#description24" : {
    "abstract" : "Text explaining the protocol error.",
    "name" : "description",
    "parent_name" : "ProtocolError"
  },
  "sass\/types\/compilererror.html?swift" : {
    "abstract" : "Thrown as an error after a failed compilation.",
    "name" : "CompilerError"
  },
  "sass\/types\/compilererror.html?swift#description9" : {
    "abstract" : "A rich multi-line user-readable description of this error, containing  message, span,\nand stackTrace, but not messages.  This is provided by the underlying Sass compiler,\nformat controlled using CompilerMessageStyle.",
    "name" : "description",
    "parent_name" : "CompilerError"
  },
  "sass\/types\/compilererror.html?swift#message" : {
    "abstract" : "A message describing the reason for the failure.",
    "name" : "message",
    "parent_name" : "CompilerError"
  },
  "sass\/types\/compilererror.html?swift#messages1" : {
    "abstract" : "Any compiler diagnostics found before the error.",
    "name" : "messages",
    "parent_name" : "CompilerError"
  },
  "sass\/types\/compilererror.html?swift#span" : {
    "abstract" : "Optionally, the section of stylesheet that triggered the failure.",
    "name" : "span",
    "parent_name" : "CompilerError"
  },
  "sass\/types\/compilererror.html?swift#stacktrace" : {
    "abstract" : "The stack trace through the compiler input stylesheets that led to the failure.",
    "name" : "stackTrace",
    "parent_name" : "CompilerError"
  },
  "sass\/types\/compilermessage.html?swift" : {
    "abstract" : "A diagnostic message generated by the Sass compiler that does not prevent the compilation\nfrom succeeding.",
    "name" : "CompilerMessage"
  },
  "sass\/types\/compilermessage.html?swift#description12" : {
    "abstract" : "A rich multi-line user-readable description of this error, containing the message, span,\nand stacktrace.  This is provided by the underlying Sass compiler, format controlled using\nCompilerMessageStyle.",
    "name" : "description",
    "parent_name" : "CompilerMessage"
  },
  "sass\/types\/compilermessage.html?swift#kind3" : {
    "abstract" : "The kind of the message.",
    "name" : "kind",
    "parent_name" : "CompilerMessage"
  },
  "sass\/types\/compilermessage.html?swift#message1" : {
    "abstract" : "The text of the message.",
    "name" : "message",
    "parent_name" : "CompilerMessage"
  },
  "sass\/types\/compilermessage.html?swift#span2" : {
    "abstract" : "Optionally, the section of stylesheet that triggered the message.",
    "name" : "span",
    "parent_name" : "CompilerMessage"
  },
  "sass\/types\/compilermessage.html?swift#stacktrace1" : {
    "abstract" : "The stack trace through the compiler input stylesheets that led to the message.",
    "name" : "stackTrace",
    "parent_name" : "CompilerMessage"
  },
  "sass\/types\/compilermessage\/kind2.html?swift" : {
    "abstract" : "Kinds of diagnostic message.",
    "name" : "Kind",
    "parent_name" : "CompilerMessage"
  },
  "sass\/types\/compilermessage\/kind2.html?swift#debug" : {
    "abstract" : "Text from a @debug rule.",
    "name" : "debug",
    "parent_name" : "Kind"
  },
  "sass\/types\/compilermessage\/kind2.html?swift#deprecation" : {
    "abstract" : "A warning indicating that the stylesheet is using a deprecated Sass\nfeature. The accompanying text does not include text like “deprecation warning”.",
    "name" : "deprecation",
    "parent_name" : "Kind"
  },
  "sass\/types\/compilermessage\/kind2.html?swift#warning" : {
    "abstract" : "A warning for something other than a deprecated Sass feature. Often\nemitted due to a stylesheet using the @warn rule.",
    "name" : "warning",
    "parent_name" : "Kind"
  },
  "sass\/types\/compilermessagestyle.html?swift" : {
    "abstract" : "The format used for CompilerError.description and  CompilerMessage.description.",
    "name" : "CompilerMessageStyle"
  },
  "sass\/types\/compilermessagestyle.html?swift#plain" : {
    "abstract" : "Plain text.",
    "name" : "plain",
    "parent_name" : "CompilerMessageStyle"
  },
  "sass\/types\/compilermessagestyle.html?swift#terminalcolored" : {
    "abstract" : "Colorized with terminal escape sequences.",
    "name" : "terminalColored",
    "parent_name" : "CompilerMessageStyle"
  },
  "sass\/types\/compilerresults.html?swift" : {
    "abstract" : "The output from a successful compilation.",
    "name" : "CompilerResults"
  },
  "sass\/types\/compilerresults.html?swift#css" : {
    "abstract" : "The  CSS produced by the Sass compiler.",
    "name" : "css",
    "parent_name" : "CompilerResults"
  },
  "sass\/types\/compilerresults.html?swift#loadedurls" : {
    "abstract" : "The canonical URLs of all source files used to produce css.",
    "name" : "loadedURLs",
    "parent_name" : "CompilerResults"
  },
  "sass\/types\/compilerresults.html?swift#messages" : {
    "abstract" : "Any compiler warnings and debug statements.",
    "name" : "messages",
    "parent_name" : "CompilerResults"
  },
  "sass\/types\/compilerresults.html?swift#sourcemap" : {
    "abstract" : "The JSON sourcemap for css, style according to the SourceMapStyle provided at compile time.",
    "name" : "sourceMap",
    "parent_name" : "CompilerResults"
  },
  "sass\/types\/compilerresults.html?swift#withfilelocationscssfileurlsourcemapfileurlstyle" : {
    "abstract" : "Add filenames to the CSS and its source map.",
    "name" : "withFileLocations(cssFileURL:sourceMapFileURL:style:)",
    "parent_name" : "CompilerResults"
  },
  "sass\/types\/compilerresults\/urlstyle.html?swift" : {
    "abstract" : "How to reference source map resources from CSS.",
    "name" : "URLStyle",
    "parent_name" : "CompilerResults"
  },
  "sass\/types\/compilerresults\/urlstyle.html?swift#allabsolute" : {
    "abstract" : "Use absolute (file: for filesystem files) URLs everywhere.",
    "name" : "allAbsolute",
    "parent_name" : "URLStyle"
  },
  "sass\/types\/compilerresults\/urlstyle.html?swift#relative" : {
    "abstract" : "Use relative URLs everywhere possible.  For example if an original source is referenced\nwith an https: or data: URL then that version is preserved.",
    "name" : "relative",
    "parent_name" : "URLStyle"
  },
  "sass\/types\/compilerresults\/urlstyle.html?swift#relativesourceroot_" : {
    "abstract" : "Like relative, but also set the sourceRoot source map field to add extra path\nsegments between the source map and the original sources.",
    "name" : "relativeSourceRoot(_:)",
    "parent_name" : "URLStyle"
  },
  "sass\/types\/compilerresults\/urlstyle.html?swift#sourcesabsolute" : {
    "abstract" : "Use absolute URLs in the source map to refer to the original sources, but use a relative\nURL to refer to the source map from the CSS.",
    "name" : "sourcesAbsolute",
    "parent_name" : "URLStyle"
  },
  "sass\/types\/cssstyle.html?swift" : {
    "abstract" : "How the Sass compiler should format the CSS it produces.",
    "name" : "CssStyle"
  },
  "sass\/types\/cssstyle.html?swift#compact" : {
    "abstract" : "Each CSS rule is written on its own single line, along with all its\ndeclarations.",
    "name" : "compact",
    "parent_name" : "CssStyle"
  },
  "sass\/types\/cssstyle.html?swift#compressed" : {
    "abstract" : "The entire stylesheet is written on a single line, with as few\ncharacters as possible.",
    "name" : "compressed",
    "parent_name" : "CssStyle"
  },
  "sass\/types\/cssstyle.html?swift#expanded" : {
    "abstract" : "Each selector and declaration is written on its own line.",
    "name" : "expanded",
    "parent_name" : "CssStyle"
  },
  "sass\/types\/cssstyle.html?swift#nested" : {
    "abstract" : "CSS rules and declarations are indented to match the nesting of the\nSass source.",
    "name" : "nested",
    "parent_name" : "CssStyle"
  },
  "sass\/types\/sassargumentlist.html?swift" : {
    "abstract" : "A Sass value representing a $arg... function argument list.",
    "name" : "SassArgumentList"
  },
  "sass\/types\/sassargumentlist.html?swift#acceptvisitor" : {
    "abstract" : "Call the corresponding method of visitor against this object.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassArgumentList"
  },
  "sass\/types\/sassargumentlist.html?swift#description" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassArgumentList"
  },
  "sass\/types\/sassargumentlist.html?swift#init_keywordskeywordsobserverseparator" : {
    "abstract" : "Initialize a new argument list with the contents of a Swift sequence.",
    "name" : "init(_:keywords:keywordsObserver:separator:)",
    "parent_name" : "SassArgumentList"
  },
  "sass\/types\/sassargumentlist.html?swift#keywords" : {
    "abstract" : "The argument list’s keyword arguments.",
    "name" : "keywords",
    "parent_name" : "SassArgumentList"
  },
  "sass\/types\/sassbool.html?swift" : {
    "abstract" : "A Sass boolean value.",
    "name" : "SassBool"
  },
  "sass\/types\/sassbool.html?swift#acceptvisitor4" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassBool"
  },
  "sass\/types\/sassbool.html?swift#description13" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassBool"
  },
  "sass\/types\/sassbool.html?swift#hashinto3" : {
    "abstract" : "Hash the boolean value.",
    "name" : "hash(into:)",
    "parent_name" : "SassBool"
  },
  "sass\/types\/sassbool.html?swift#istruthy" : {
    "abstract" : "Sass considers all values except null and false to be “truthy”, meaning your function should almost always be checking this property instead of trying to downcast to SassBool.",
    "name" : "isTruthy",
    "parent_name" : "SassBool"
  },
  "sass\/types\/sassbool.html?swift#sassbool-sassbool" : {
    "abstract" : "Boolean equality.",
    "name" : "==(SassBool, SassBool)",
    "parent_name" : "SassBool"
  },
  "sass\/types\/sassbool.html?swift#value1" : {
    "abstract" : "The value of the boolean.",
    "name" : "value",
    "parent_name" : "SassBool"
  },
  "sass\/types\/sasscalculation.html?swift" : {
    "abstract" : "A Sass calculation value.",
    "name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#acceptvisitor1" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#arguments" : {
    "abstract" : "The SassCalculation’s arguments.  The Sass specification says how many\nare actually valid for each Kind but this API does not check this.",
    "name" : "arguments",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#description2" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#hashinto" : {
    "abstract" : "Hash the calculation.",
    "name" : "hash(into:)",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#initcalc" : {
    "abstract" : "Create a Sass calc() expression.",
    "name" : "init(calc:)",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#initkindarguments" : {
    "abstract" : "Create an arbitrary SassCalculation.",
    "name" : "init(kind:arguments:)",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#kind1" : {
    "abstract" : "The SassCalculation’s Kind.",
    "name" : "kind",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation.html?swift#sasscalculation-sasscalculation" : {
    "abstract" : "Two SassCalculations are equal if they have the same kind and arguments.",
    "name" : "==(SassCalculation, SassCalculation)",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation\/kind.html?swift" : {
    "abstract" : "The kind of the SassCalculation expression",
    "name" : "Kind",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation\/kind.html?swift#calc" : {
    "abstract" : "Sass calc()",
    "name" : "calc",
    "parent_name" : "Kind"
  },
  "sass\/types\/sasscalculation\/kind.html?swift#clamp" : {
    "abstract" : "Sass clamp()",
    "name" : "clamp",
    "parent_name" : "Kind"
  },
  "sass\/types\/sasscalculation\/kind.html?swift#max" : {
    "abstract" : "Sass max()",
    "name" : "max",
    "parent_name" : "Kind"
  },
  "sass\/types\/sasscalculation\/kind.html?swift#min" : {
    "abstract" : "Sass min()",
    "name" : "min",
    "parent_name" : "Kind"
  },
  "sass\/types\/sasscalculation\/operator.html?swift" : {
    "abstract" : "Arithmetic operators valid within Value.operation(_:_:_:).",
    "name" : "Operator",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation\/operator.html?swift#dividedby" : {
    "abstract" : "The regular arithmetic operator with normal precedence.",
    "name" : "dividedBy",
    "parent_name" : "Operator"
  },
  "sass\/types\/sasscalculation\/operator.html?swift#minus" : {
    "abstract" : "The regular arithmetic operator with normal precedence.",
    "name" : "minus",
    "parent_name" : "Operator"
  },
  "sass\/types\/sasscalculation\/operator.html?swift#plus" : {
    "abstract" : "The regular arithmetic operator with normal precedence.",
    "name" : "plus",
    "parent_name" : "Operator"
  },
  "sass\/types\/sasscalculation\/operator.html?swift#times" : {
    "abstract" : "The regular arithmetic operator with normal precedence.",
    "name" : "times",
    "parent_name" : "Operator"
  },
  "sass\/types\/sasscalculation\/value.html?swift" : {
    "abstract" : "A subexpression of a SassCalculation.",
    "name" : "Value",
    "parent_name" : "SassCalculation"
  },
  "sass\/types\/sasscalculation\/value.html?swift#calculation_" : {
    "abstract" : "A nested calculation.",
    "name" : "calculation(_:)",
    "parent_name" : "Value"
  },
  "sass\/types\/sasscalculation\/value.html?swift#description1" : {
    "abstract" : "A human-readable description of the value.",
    "name" : "description",
    "parent_name" : "Value"
  },
  "sass\/types\/sasscalculation\/value.html?swift#interpolation_" : {
    "abstract" : "A string - expected to be a Sass variable, but this form means the stylesheet has #{$width} instead of $width.\nUse string(_:) instead when building your own Values.",
    "name" : "interpolation(_:)",
    "parent_name" : "Value"
  },
  "sass\/types\/sasscalculation\/value.html?swift#number_" : {
    "abstract" : "A number with optional associated units.  See number(_:unit:).",
    "name" : "number(_:)",
    "parent_name" : "Value"
  },
  "sass\/types\/sasscalculation\/value.html?swift#number_unit" : {
    "abstract" : "A helper to construct number(_:)s.",
    "name" : "number(_:unit:)",
    "parent_name" : "Value"
  },
  "sass\/types\/sasscalculation\/value.html?swift#operation___" : {
    "abstract" : "A binary arithmetic expression.",
    "name" : "operation(_:_:_:)",
    "parent_name" : "Value"
  },
  "sass\/types\/sasscalculation\/value.html?swift#string_" : {
    "abstract" : "A string - expected to be a Sass variable for later evaluation, for example the $width part of calc($width \/ 2).",
    "name" : "string(_:)",
    "parent_name" : "Value"
  },
  "sass\/types\/sasscolor.html?swift" : {
    "abstract" : "A Sass color value.",
    "name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#acceptvisitor2" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#alpha1" : {
    "abstract" : "The alpha channel between 0 and 1.",
    "name" : "alpha",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#blackness1" : {
    "abstract" : "The HWB blackness channel, between 0 and 100.",
    "name" : "blackness",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#blue1" : {
    "abstract" : "The blue channel, between 0 and 255.",
    "name" : "blue",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#changealpha" : {
    "abstract" : "Create a new SassColor by changing only the alpha channel of this color.",
    "name" : "change(alpha:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#changehue1" : {
    "abstract" : "Create a new SassColor by changing only the hue channel of this color.",
    "name" : "change(hue:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#changehuesaturationlightnessalpha" : {
    "abstract" : "Create a new SassColor by changing some of the HSL-A channels of this color.",
    "name" : "change(hue:saturation:lightness:alpha:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#changehuewhitenessblacknessalpha" : {
    "abstract" : "Create a new SassColor by changing some of the HWB-A channels of this color.",
    "name" : "change(hue:whiteness:blackness:alpha:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#changeredgreenbluealpha" : {
    "abstract" : "Create a new SassColor by changing some of the RGB-A channels of this color.",
    "name" : "change(red:green:blue:alpha:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#description7" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#green1" : {
    "abstract" : "The green channel, between 0 and 255.",
    "name" : "green",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#hashinto1" : {
    "abstract" : "Hash the color.",
    "name" : "hash(into:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#hue4" : {
    "abstract" : "The HSL or HWB hue channel, between 0 and 360.",
    "name" : "hue",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#inithuesaturationlightnessalpha" : {
    "abstract" : "Create a SassColor from HSL and alpha components.",
    "name" : "init(hue:saturation:lightness:alpha:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#inithuewhitenessblacknessalpha" : {
    "abstract" : "Create a SassColor from HWB and alpha components.",
    "name" : "init(hue:whiteness:blackness:alpha:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#initredgreenbluealpha" : {
    "abstract" : "Create a SassColor from RGB and alpha components.",
    "name" : "init(red:green:blue:alpha:)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#lightness1" : {
    "abstract" : "The HSL lightness channel, between 0 and 100.",
    "name" : "lightness",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#red1" : {
    "abstract" : "The red channel, between 0 and 255.",
    "name" : "red",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#sasscolor-sasscolor" : {
    "abstract" : "Colors are compared in their RGB-A forms, using  only 10 DP for the alpha.",
    "name" : "==(SassColor, SassColor)",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#saturation1" : {
    "abstract" : "The HSL saturation channel, between 0 and 100.",
    "name" : "saturation",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscolor.html?swift#whiteness1" : {
    "abstract" : "The HWB whiteness channel, between 0 and 100.",
    "name" : "whiteness",
    "parent_name" : "SassColor"
  },
  "sass\/types\/sasscompilerfunction.html?swift" : {
    "abstract" : "A Sass compiler function.",
    "name" : "SassCompilerFunction"
  },
  "sass\/types\/sasscompilerfunction.html?swift#acceptvisitor3" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassCompilerFunction"
  },
  "sass\/types\/sasscompilerfunction.html?swift#description8" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassCompilerFunction"
  },
  "sass\/types\/sasscompilerfunction.html?swift#hashinto2" : {
    "abstract" : "Hash the compiler function",
    "name" : "hash(into:)",
    "parent_name" : "SassCompilerFunction"
  },
  "sass\/types\/sasscompilerfunction.html?swift#id" : {
    "abstract" : "The function ID.  Opaque to users, meaningful to Sass implementations.",
    "name" : "id",
    "parent_name" : "SassCompilerFunction"
  },
  "sass\/types\/sasscompilerfunction.html?swift#sasscompilerfunction-sasscompilerfunction" : {
    "abstract" : "Compiler functions are equal if they have the same ID and apply to the same compilation.\nWe only test the first part of that so watch out.",
    "name" : "==(SassCompilerFunction, SassCompilerFunction)",
    "parent_name" : "SassCompilerFunction"
  },
  "sass\/types\/sassconstants.html?swift" : {
    "abstract" : "SassScript constant values.",
    "name" : "SassConstants"
  },
  "sass\/types\/sassconstants.html?swift#false" : {
    "abstract" : "Sass false.",
    "name" : "false",
    "parent_name" : "SassConstants"
  },
  "sass\/types\/sassconstants.html?swift#null" : {
    "abstract" : "Sass null.",
    "name" : "null",
    "parent_name" : "SassConstants"
  },
  "sass\/types\/sassconstants.html?swift#true" : {
    "abstract" : "Sass true.",
    "name" : "true",
    "parent_name" : "SassConstants"
  },
  "sass\/types\/sassdynamicfunction.html?swift" : {
    "abstract" : "A dynamic Sass function.",
    "name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#acceptvisitor6" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#description15" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#function" : {
    "abstract" : "The actual function.",
    "name" : "function",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#hashinto4" : {
    "abstract" : "Hash the dynamic function",
    "name" : "hash(into:)",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#id1" : {
    "abstract" : "The ID of the function, used by the Sass compiler to refer to it.",
    "name" : "id",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#initsignaturefunction" : {
    "abstract" : "Create a new dynamic function.",
    "name" : "init(signature:function:)",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#sassdynamicfunction-sassdynamicfunction" : {
    "abstract" : "Dynamic functions are equal if they have the same ID.",
    "name" : "==(SassDynamicFunction, SassDynamicFunction)",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassdynamicfunction.html?swift#signature" : {
    "abstract" : "The Sass signature of the function.",
    "name" : "signature",
    "parent_name" : "SassDynamicFunction"
  },
  "sass\/types\/sassfunctionerror.html?swift" : {
    "abstract" : "Errors thrown for common SassFunction scenarios.",
    "name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#badlistindexmaxactual" : {
    "abstract" : "A Sass value used as a list index was out of range.",
    "name" : "badListIndex(max:actual:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#badstringindexmaxactual" : {
    "abstract" : "A Sass value used as a string index was out of range.",
    "name" : "badStringIndex(max:actual:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#channelnotinrange___" : {
    "abstract" : "A color channel value was not in the expected range.",
    "name" : "channelNotInRange(_:_:_:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#description16" : {
    "abstract" : "A human-readable description of the error.",
    "name" : "description",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#missingunit__" : {
    "abstract" : "A SassNumber didn’t have a specific single unit.",
    "name" : "missingUnit(_:_:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#notinrange__" : {
    "abstract" : "A SassNumber was not in the expected range.",
    "name" : "notInRange(_:_:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#notinteger_" : {
    "abstract" : "A SassNumber used as an integer wasn’t.",
    "name" : "notInteger(_:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#uncancelledunitsnumeratordenominator" : {
    "abstract" : "A SassNumber couldn’t be formed because of uncancelled units.",
    "name" : "uncancelledUnits(numerator:denominator:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#unconvertibleunit1fromtospecifically" : {
    "abstract" : "A SassNumber couldn’t be converted to some requested units.",
    "name" : "unconvertibleUnit1(from:to:specifically:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#unconvertibleunit2fromtoleftovers" : {
    "abstract" : "A SassNumber couldn’t be converted to requested units.",
    "name" : "unconvertibleUnit2(from:to:leftovers:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#unexpectedunits_" : {
    "abstract" : "A SassNumber had units that weren’t expected.",
    "name" : "unexpectedUnits(_:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sassfunctionerror.html?swift#wrongtypeexpectedactual" : {
    "abstract" : "A Sass value was not the expected type.",
    "name" : "wrongType(expected:actual:)",
    "parent_name" : "SassFunctionError"
  },
  "sass\/types\/sasslist.html?swift" : {
    "abstract" : "A Sass list value.",
    "name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#acceptvisitor7" : {
    "abstract" : "Call the corresponding method of visitor against this object.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#description17" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#hasbrackets" : {
    "abstract" : "Does the list have brackets?",
    "name" : "hasBrackets",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#hashinto5" : {
    "abstract" : "Hashes the list’s properties and contents.",
    "name" : "hash(into:)",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#init_separatorhasbrackets" : {
    "abstract" : "Initialize a new list with the contents of a Swift sequence.",
    "name" : "init(_:separator:hasBrackets:)",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#listcount" : {
    "abstract" : "The number of values in this value viewed as a list.",
    "name" : "listCount",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#makeiterator" : {
    "abstract" : "An iterator for the values in the list.",
    "name" : "makeIterator()",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#sasslist-sasslist" : {
    "abstract" : "List equality: all empty SassLists are equal.  Non-empty lists are equal iff they have the same separator, brackets, and contents.",
    "name" : "==(SassList, SassList)",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#separator1" : {
    "abstract" : "The list separator.",
    "name" : "separator",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist.html?swift#valueatsassindex" : {
    "abstract" : "Subscript the value using a Sass list index.",
    "name" : "valueAt(sassIndex:)",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist\/separator.html?swift" : {
    "abstract" : "The list-separator character.",
    "name" : "Separator",
    "parent_name" : "SassList"
  },
  "sass\/types\/sasslist\/separator.html?swift#comma" : {
    "abstract" : "Comma.",
    "name" : "comma",
    "parent_name" : "Separator"
  },
  "sass\/types\/sasslist\/separator.html?swift#slash" : {
    "abstract" : "Forward slash.",
    "name" : "slash",
    "parent_name" : "Separator"
  },
  "sass\/types\/sasslist\/separator.html?swift#space" : {
    "abstract" : "Whitespace.",
    "name" : "space",
    "parent_name" : "Separator"
  },
  "sass\/types\/sasslist\/separator.html?swift#undecided" : {
    "abstract" : "Not yet determined: singleton and empty lists don’t have\nseparators defined.",
    "name" : "undecided",
    "parent_name" : "Separator"
  },
  "sass\/types\/sassmap.html?swift" : {
    "abstract" : "A Sass map value.",
    "name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#acceptvisitor8" : {
    "abstract" : "Call the corresponding method of visitor against this object.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#description18" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#dictionary1" : {
    "abstract" : "The dictionary of values.",
    "name" : "dictionary",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#hashinto6" : {
    "abstract" : "Hashes the map’s contents",
    "name" : "hash(into:)",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#init_8" : {
    "abstract" : "Create a SassMap from an existing Dictionary.",
    "name" : "init(_:)",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#inituniquekeyswithvalues" : {
    "abstract" : "Create a  SassMap from a sequence of (SassValue, SassValue) pairs.",
    "name" : "init(uniqueKeysWithValues:)",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#listcount1" : {
    "abstract" : "The number of values in this value viewed as a list.",
    "name" : "listCount",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#makeiterator1" : {
    "abstract" : "An iterator for contents of the map.  Each element of the iteration is a SassList\ncontaining the key and value SassValues for one entry in the map.",
    "name" : "makeIterator()",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#sassmap-sassmap" : {
    "abstract" : "List equality: two SassMaps are equal if their dictionaries are equivalent.",
    "name" : "==(SassMap, SassMap)",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#separator2" : {
    "abstract" : "The list separator used by this value when viewed as a list.",
    "name" : "separator",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#subscript_" : {
    "abstract" : "Return the value corresponding to the given key, or nil if the map does not have the key.",
    "name" : "subscript(_:)",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassmap.html?swift#valueatsassindex1" : {
    "name" : "valueAt(sassIndex:)",
    "parent_name" : "SassMap"
  },
  "sass\/types\/sassnull.html?swift" : {
    "abstract" : "The Sass null value.",
    "name" : "SassNull"
  },
  "sass\/types\/sassnull.html?swift#acceptvisitor5" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassNull"
  },
  "sass\/types\/sassnull.html?swift#description14" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassNull"
  },
  "sass\/types\/sassnull.html?swift#isnull" : {
    "abstract" : "Does this value represent Sass’s null value?",
    "name" : "isNull",
    "parent_name" : "SassNull"
  },
  "sass\/types\/sassnull.html?swift#istruthy1" : {
    "abstract" : "Sass considers all values except null and false to be “truthy”, meaning your function should almost always be checking this property instead of trying to downcast to SassBool.",
    "name" : "isTruthy",
    "parent_name" : "SassNull"
  },
  "sass\/types\/sassnull.html?swift#sassnull-sassnull" : {
    "abstract" : "There’s only one instance of null and it’s equal to itself.",
    "name" : "==(SassNull, SassNull)",
    "parent_name" : "SassNull"
  },
  "sass\/types\/sassnumber.html?swift" : {
    "abstract" : "A Sass numeric value.",
    "name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#acceptvisitor9" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#asconvertedtonumeratorunitsdenominatorunits" : {
    "abstract" : "The equivalent SassNumber converted to the requested units.",
    "name" : "asConvertedTo(numeratorUnits:denominatorUnits:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#asinrange" : {
    "abstract" : "The value of this number within a closed range.",
    "name" : "asIn(range:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#asinrange1" : {
    "abstract" : "The value of this number within a half-open range.",
    "name" : "asIn(range:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#asint" : {
    "abstract" : "The integer value of this number.",
    "name" : "asInt()",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#checkhasunitname" : {
    "abstract" : "Throw an error unless the number has exactly the single unit.",
    "name" : "checkHasUnit(name:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#checknounits" : {
    "abstract" : "Throw an error if the number has any units.",
    "name" : "checkNoUnits()",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#denominatorunits" : {
    "abstract" : "The names of the ‘denominator’ units.",
    "name" : "denominatorUnits",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#description19" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#double1" : {
    "abstract" : "The underlying sign and magnitude of the number.",
    "name" : "double",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#hashinto8" : {
    "abstract" : "Hash the value.",
    "name" : "hash(into:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#hasnounits" : {
    "abstract" : "Is the number free of units?",
    "name" : "hasNoUnits",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#hasunitname" : {
    "abstract" : "Does the number have exactly this unit?",
    "name" : "hasUnit(name:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#init_numeratorunitsdenominatorunits" : {
    "abstract" : "Initialize a new number from a value and a list of numerator and denominator units.",
    "name" : "init(_:numeratorUnits:denominatorUnits:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#init_unit" : {
    "abstract" : "Initialize a new number from a value and optionally a unit.",
    "name" : "init(_:unit:)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#numeratorunits" : {
    "abstract" : "The names of the ‘numerator’ units.",
    "name" : "numeratorUnits",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassnumber.html?swift#sassnumber-sassnumber" : {
    "abstract" : "Two SassNumbers are equal iff:",
    "name" : "==(SassNumber, SassNumber)",
    "parent_name" : "SassNumber"
  },
  "sass\/types\/sassstring.html?swift" : {
    "abstract" : "A Sass string value.",
    "name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#acceptvisitor10" : {
    "abstract" : "Take part in the SassValueVisitor protocol.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#description20" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#hashinto9" : {
    "abstract" : "Hash the string’s text.",
    "name" : "hash(into:)",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#init_isquoted" : {
    "abstract" : "Initialize a new string.  You should quote strings unless there’s a good reason not to.",
    "name" : "init(_:isQuoted:)",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#isquoted" : {
    "abstract" : "Whether the string is quoted “ or raw.",
    "name" : "isQuoted",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#sasslength" : {
    "abstract" : "The length of the string according to Sass.",
    "name" : "sassLength",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#sassstring-sassstring" : {
    "abstract" : "Two SassStrings are equal if they have the same text, whether or not either is quoted.",
    "name" : "==(SassString, SassString)",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#scalarindexfromsassindex" : {
    "abstract" : "Interpret a Sass string index.",
    "name" : "scalarIndexFrom(sassIndex:)",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassstring.html?swift#string" : {
    "abstract" : "The value of the string.  Does not include any quotes.",
    "name" : "string",
    "parent_name" : "SassString"
  },
  "sass\/types\/sassvalue9.html?swift" : {
    "abstract" : "Common behavior between values passed to or returned from Sass functions.",
    "name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#acceptvisitor11" : {
    "abstract" : "Call the corresponding method of visitor against this object.",
    "name" : "accept(visitor:)",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#arrayindexfromsassindex" : {
    "abstract" : "Convert a Sass list index.",
    "name" : "arrayIndexFrom(sassIndex:)",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#asargumentlist" : {
    "abstract" : "Reinterpret the value as an argument list.",
    "name" : "asArgumentList()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#asbool" : {
    "abstract" : "Reinterpret the value as a boolean.  But see isTruthy: you almost always don’t\nwant to be using this.",
    "name" : "asBool()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#ascalculation" : {
    "abstract" : "Reinterpret the value as a calculation.",
    "name" : "asCalculation()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#ascolor" : {
    "abstract" : "Reinterpret the value as a color.",
    "name" : "asColor()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#ascompilerfunction" : {
    "abstract" : "Reinterpret the value as a compiler function.",
    "name" : "asCompilerFunction()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#asdynamicfunction" : {
    "abstract" : "Reinterpret the value as a dynamic function.",
    "name" : "asDynamicFunction()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#asmap" : {
    "abstract" : "Reinterpret the value as a map.  Empty lists are reinterpreted as the empty map.",
    "name" : "asMap()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#asnumber" : {
    "abstract" : "Reinterpret the value as a number.",
    "name" : "asNumber()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#asstring" : {
    "abstract" : "Reinterpret the value as a string.",
    "name" : "asString()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#description23" : {
    "abstract" : "A short description of the value.",
    "name" : "description",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#hasbrackets1" : {
    "abstract" : "Is this value, viewed as a list, surrounded by brackets?",
    "name" : "hasBrackets",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#hashinto11" : {
    "abstract" : "SassValue can be used as a dictionary key.",
    "name" : "hash(into:)",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#isnull1" : {
    "abstract" : "Does this value represent Sass’s null value?",
    "name" : "isNull",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#istruthy2" : {
    "abstract" : "Sass considers all values except null and false to be “truthy”, meaning\nyour function should almost always be checking this property instead of trying\nto downcast to SassBool.",
    "name" : "isTruthy",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#listcount2" : {
    "abstract" : "The number of values in this value viewed as a list.",
    "name" : "listCount",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#makeiterator2" : {
    "abstract" : "An iterator for the values in the list, for Sequence conformance.",
    "name" : "makeIterator()",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#sassvalue-sassvalue" : {
    "abstract" : "Two SassValues are generally equal if they have the same dynamic type and\ncompare equally as that type.  In addition, empty lists and maps compare as equal.",
    "name" : "==(SassValue, SassValue)",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#separator3" : {
    "abstract" : "The list separator used by this value when viewed as a list.",
    "name" : "separator",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvalue9.html?swift#valueatsassindex2" : {
    "abstract" : "Subscript the value using a Sass list index.",
    "name" : "valueAt(sassIndex:)",
    "parent_name" : "SassValue"
  },
  "sass\/types\/sassvaluevisitor.html?swift" : {
    "abstract" : "A protocol for implementing polymorphic operations over SassValue objects.",
    "name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#returntype" : {
    "abstract" : "The return type of the operation.",
    "name" : "ReturnType",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitargumentlist" : {
    "abstract" : "The operation for SassArgumentList.",
    "name" : "visit(argumentList:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitbool" : {
    "abstract" : "The operation for SassBool.",
    "name" : "visit(bool:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitcalculation" : {
    "abstract" : "The operation for SassCalculation.",
    "name" : "visit(calculation:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitcolor" : {
    "abstract" : "The operation for SassColor.",
    "name" : "visit(color:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitcompilerfunction" : {
    "abstract" : "The operation for SassCompilerFunction.",
    "name" : "visit(compilerFunction:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitdynamicfunction" : {
    "abstract" : "The operation for SassDynamicFunction.",
    "name" : "visit(dynamicFunction:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitlist" : {
    "abstract" : "The operation for SassList.",
    "name" : "visit(list:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitmap" : {
    "abstract" : "The operation for SassMap.",
    "name" : "visit(map:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitnull" : {
    "abstract" : "The operation for SassNull.",
    "name" : "visit(null:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitnumber" : {
    "abstract" : "The operation for SassNumber.",
    "name" : "visit(number:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sassvaluevisitor.html?swift#visitstring" : {
    "abstract" : "The operation for SassString.",
    "name" : "visit(string:)",
    "parent_name" : "SassValueVisitor"
  },
  "sass\/types\/sourcemapstyle.html?swift" : {
    "abstract" : "The kind of source map to generate for the stylesheet, returned in CompilerResults.sourceMap.",
    "name" : "SourceMapStyle"
  },
  "sass\/types\/sourcemapstyle.html?swift#embeddedsources" : {
    "abstract" : "Generate a source map with embedded sources.",
    "name" : "embeddedSources",
    "parent_name" : "SourceMapStyle"
  },
  "sass\/types\/sourcemapstyle.html?swift#none" : {
    "abstract" : "Do not generate a source map.",
    "name" : "none",
    "parent_name" : "SourceMapStyle"
  },
  "sass\/types\/sourcemapstyle.html?swift#separatesources" : {
    "abstract" : "Generate a source map that references sources by URL only.",
    "name" : "separateSources",
    "parent_name" : "SourceMapStyle"
  },
  "sass\/types\/span1.html?swift" : {
    "abstract" : "A section of a stylesheet.",
    "name" : "Span"
  },
  "sass\/types\/span1.html?swift#context" : {
    "abstract" : "Additional source text surrounding the span.",
    "name" : "context",
    "parent_name" : "Span"
  },
  "sass\/types\/span1.html?swift#description11" : {
    "abstract" : "A short description of the span.",
    "name" : "description",
    "parent_name" : "Span"
  },
  "sass\/types\/span1.html?swift#end" : {
    "abstract" : "The location of the first character after this span, or nil to mean\nthe span is zero-length and points just before start.",
    "name" : "end",
    "parent_name" : "Span"
  },
  "sass\/types\/span1.html?swift#start" : {
    "abstract" : "The location of the first character in the span.",
    "name" : "start",
    "parent_name" : "Span"
  },
  "sass\/types\/span1.html?swift#text" : {
    "abstract" : "The text covered by the span, or nil if there is no\nassociated text.",
    "name" : "text",
    "parent_name" : "Span"
  },
  "sass\/types\/span1.html?swift#url1" : {
    "abstract" : "The URL of the stylesheet to which the span refers, or nil if it refers to\nan inline compilation that doesn’t specify a URL.",
    "name" : "url",
    "parent_name" : "Span"
  },
  "sass\/types\/span1\/location.html?swift" : {
    "abstract" : "A single point in a stylesheet.",
    "name" : "Location",
    "parent_name" : "Span"
  },
  "sass\/types\/span1\/location.html?swift#column" : {
    "abstract" : "The 1-based column number of this location within its line.",
    "name" : "column",
    "parent_name" : "Location"
  },
  "sass\/types\/span1\/location.html?swift#description10" : {
    "abstract" : "A short description of the location.",
    "name" : "description",
    "parent_name" : "Location"
  },
  "sass\/types\/span1\/location.html?swift#line" : {
    "abstract" : "The 1-based line number of this location within the stylesheet.",
    "name" : "line",
    "parent_name" : "Location"
  },
  "sass\/types\/span1\/location.html?swift#offset" : {
    "abstract" : "The 0-based byte offset of this location within the stylesheet.",
    "name" : "offset",
    "parent_name" : "Location"
  },
  "sass\/types\/syntax.html?swift" : {
    "abstract" : "The syntax used for a stylesheet.",
    "name" : "Syntax"
  },
  "sass\/types\/syntax.html?swift#css1" : {
    "abstract" : "Plain CSS syntax that doesn’t support any special Sass features.",
    "name" : "css",
    "parent_name" : "Syntax"
  },
  "sass\/types\/syntax.html?swift#indented" : {
    "abstract" : "The indented .sass syntax.",
    "name" : "indented",
    "parent_name" : "Syntax"
  },
  "sass\/types\/syntax.html?swift#sass" : {
    "abstract" : "The indented .sass syntax.",
    "name" : "sass",
    "parent_name" : "Syntax"
  },
  "sass\/types\/syntax.html?swift#scss" : {
    "abstract" : "The CSS-superset .scss syntax.",
    "name" : "scss",
    "parent_name" : "Syntax"
  }
}